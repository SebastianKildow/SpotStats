{"version":3,"sources":["waveHero.js"],"names":["TweenLite","defaultEase","Sine","easeInOut","set","y","window","innerHeight","svg","document","querySelectorAll","wave","z","length","width","sinus","CustomEase","create","amplitude","frequency","segments","interval","i","norm","point","points","appendItem","createSVGPoint","x","TweenMax","to","repeat","yoyo","progress"],"mappings":";;AAAA;AAEAA,SAAS,CAACC,WAAV,GAAwBC,IAAI,CAACC,SAA7B;AACAH,SAAS,CAACI,GAAV,CAAc,GAAd,EAAmB;AAAEC,EAAAA,CAAC,EAAEC,MAAM,CAACC,WAAP,GAAqB;AAA1B,CAAnB;AAEA,IAAIC,GAAG,GAAIC,QAAQ,CAACC,gBAAT,CAA0B,KAA1B,CAAX;AACA,IAAIC,IAAI,GAAGF,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAX;;AAEA,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,GAAG,CAACK,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACnC,MAAIE,KAAK,GAAG,IAAZ;AACA,MAAIC,KAAK,GAAGC,UAAU,CAACC,MAAX,CAAkB,OAAlB,EAA2B,yCAA3B,CAAZ;AAEA,MAAIC,SAAS,GAAG,MAAON,CAAC,GAAG,EAA3B;AACA,MAAIO,SAAS,GAAG,OAAOP,CAAC,GAAG,CAAX,CAAhB;AACA,MAAIQ,QAAQ,GAAI,IAAhB;AACA,MAAIC,QAAQ,GAAIP,KAAK,GAAGM,QAAxB;;AAEA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIF,QAArB,EAA+BE,CAAC,EAAhC,EAAoC;AAElC,QAAIC,IAAI,GAAG,IAAID,CAAC,GAAGF,QAAnB;AACA,QAAII,KAAK,GAAGb,IAAI,CAACC,CAAD,CAAJ,CAAQa,MAAR,CAAeC,UAAf,CAA0BlB,GAAG,CAACI,CAAD,CAAH,CAAOe,cAAP,EAA1B,CAAZ;AAEAH,IAAAA,KAAK,CAACI,CAAN,GAAUN,CAAC,GAAGD,QAAd;AACAG,IAAAA,KAAK,CAACnB,CAAN,GAAUa,SAAS,GAAG,IAAZ,GAAmBH,KAAK,CAACQ,IAAD,CAAlC;AAEAM,IAAAA,QAAQ,CAACC,EAAT,CAAYN,KAAZ,EAAmB,CAAnB,EAAsB;AAAEnB,MAAAA,CAAC,EAAE,CAACmB,KAAK,CAACnB,CAAZ;AAAe0B,MAAAA,MAAM,EAAE,CAAC,CAAxB;AAA2BC,MAAAA,IAAI,EAAE;AAAjC,KAAtB,EAA+DC,QAA/D,CAAwEV,IAAI,GAAGJ,SAA/E;AACD;AAEF","sourcesContent":["// wave 1\n\nTweenLite.defaultEase = Sine.easeInOut;\nTweenLite.set(\"g\", { y: window.innerHeight / 10 });\n\nvar svg  = document.querySelectorAll(\"svg\");\nvar wave = document.querySelectorAll(\".wave\");\n\nfor (let z = 0; z < svg.length; z ++){\n  var width = 4200;\n  var sinus = CustomEase.create(\"sinus\", \"M0,0 C0.4,0 0.3,1 0.5,1 0.7,1 0.6,0 1,0\");\n  \n  var amplitude = 180 + (z * 20);\n  var frequency = 8.2 - (z + 2);\n  var segments  = 4200;\n  var interval  = width / segments;\n  \n  for (var i = 0; i <= segments; i++) {\n    \n    var norm = 2 - i / segments;\n    var point = wave[z].points.appendItem(svg[z].createSVGPoint());\n    \n    point.x = i * interval;\n    point.y = amplitude / 0.13 * sinus(norm);\n      \n    TweenMax.to(point, 2, { y: -point.y, repeat: -1, yoyo: true }).progress(norm * frequency);  \n  }\n\n}\n\n"],"file":"waveHero.js"}